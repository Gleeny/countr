# this is for production. it's called "clusterfuck" because it's literally a clusterfuck of clusters.
# Countr uses this file to run, and it also makes it easy to restart individual clusters and have a "rolling restart" as well.

version: '3'

services:
  cluster0:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=0
      - SHARDS=0,1,2,3,4,5,6,7,8,9
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster0:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  cluster1:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=1
      - SHARDS=10,11,12,13,14,15,16,17,18,19
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster1:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  cluster2:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=2
      - SHARDS=20,21,22,23,24,25,26,27,28,29
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster2:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  cluster3:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=3
      - SHARDS=30,31,32,33,34,35,36,37,38,39
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster3:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  cluster4:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=4
      - SHARDS=40,41,42,43,44,45,46,47,48,49
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster4:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  cluster5:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=5
      - SHARDS=50,51,52,53,54,55,56,57,58,59
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster5:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  cluster6:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=6
      - SHARDS=60,61,62,63,64,65,66,67,68,69
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster6:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  cluster7:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=7
      - SHARDS=70,71,72,73,74,75,76,77,78,79
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster7:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  cluster8:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=8
      - SHARDS=80,81,82,83,84,85,86,87,88,89
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster8:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  cluster9:
    image: countr/countr:latest
    restart: always
    environment:
      - CLUSTER=9
      - SHARDS=90,91,92,93,94,95,96,97,98,99
      - SHARD_COUNT=100
    volumes:
      - ./logs/countr-cluster9:/app/logs
    depends_on:
      - manager
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"
  manager:
    image: countr/countr:latest
    restart: always
    command: "start:manager"
    volumes:
      - ./logs/manager:/app/logs
    ports:
      - 127.0.0.1:$API_PORT:$API_PORT
    networks:
      - countr-db
    labels:
      io.portainer.accesscontrol.teams: "promise-solutions"

networks:
  countr-db:
    name: countr
    external: true
